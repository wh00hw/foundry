searchState.loadedDescShard("foundry_common", 1, "Returns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns the complementary error variant for <code>std::fs::read</code>.\nReturns the complementary error variant for …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns the complementary error variant for …\nReturns the complementary error variant for …\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns the complementary error variant for <code>std::fs::write</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nMap keyed by breakpoints char to their location (contract …\nConfigures the executor environment during tests.\n<code>EvmArgs</code> and <code>EnvArgs</code> take the highest precedence in the …\nUse the create 2 factory in all cases including tests and …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nThe base fee in a block.\nThe coinbase of the block.\nThe block difficulty.\nThe block gas limit.\nThe block number.\nThe block prevrandao value. NOTE: Before merge this field …\nThe timestamp of the block.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nThe chain name or EIP-155 chain ID.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nEIP-170: Contract code size limit in bytes. Useful to …\nSets the number of assumed available compute units per …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nWhether to disable the block gas limit checks.\nEnsures that fork url exists and returns its reference.\nAll ethereum environment related arguments\nEnable the FFI cheatcode.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nFetch state from a specific block number over a remote …\nNumber of retries.\nInitial retry backoff on encountering errors.\nFetch state over a remote endpoint instead of starting …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe block gas limit.\nThe gas price.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nWe have to serialize chain IDs and not names because when …\nThe initial balance of deployed test contracts.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nWhether to enable isolation of calls. In isolation mode …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nThe memory limit per EVM execution in bytes. If this limit …\nDisables rate limiting for this node’s provider.\nExplicitly disables the use of RPC caching.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nThe address which will be executing tests.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nThe transaction origin.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nVerbosity of the EVM.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nFormats a value using a FormatSpec.\n%e format spec\nA format specifier.\n%x format spec\n%i format spec\n%d format spec\n%o format spec\n%s format spec\nHelper trait to format Ethereum types.\nFormats a string using the input values.\nFormats a value using a FormatSpec.\nFormats a U256 number to string, adding an exponential …\nPretty-prints the given value into a string suitable for …\nPretty-prints the given value into a string suitable for …\nPretty-prints a slice of tokens using <code>format_token</code>.\nFormats a U256 number to string, adding an exponential …\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nParses string input as Token against the expected ParamType\nReturn a prettified string version of the value\nHelper trait and functions to format Ethereum types.\nFormats a value using a FormatSpec.\n%e format spec\nA format specifier.\n%x format spec\n%i format spec\n%d format spec\n%o format spec\n%s format spec\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nFormats a string using the input values.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nFormats a value using a FormatSpec.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nWrapper that implements [<code>Display</code>] for a <code>DynSolValue</code>.\n<code>DynSolValue</code> formatter.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nPretty-prints the given value into a string suitable for …\nPretty-prints the given value into a string suitable for …\nPretty-prints a slice of tokens using <code>format_token</code>.\nThe formatter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nRecursively formats a comma-separated list of <code>DynSolValue</code>s.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nCreates a new [<code>Display</code>] wrapper for the given value.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nParses string input as Token against the expected ParamType\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nFormats the given values as a tuple.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nRecursively formats a <code>DynSolValue</code>.\nThe value to display.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nVarious numerical ethereum types used for pretty printing\nlength of the name column for pretty formatting …\nHelper trait to format Ethereum types.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nReturns the <code>UiFmt::pretty()</code> formatted attribute of the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturn a prettified string version of the value\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nContains the error value\nContains the success value\nCanonicalize a path, returning an error if the path does …\nWrapper for <code>std::fs::copy</code>\nWrapper for <code>std::fs::create_dir</code>\nWrapper for <code>std::fs::create_dir_all</code>\nWrapper for <code>File::create</code>.\nReturns an iterator over all files with the given …\nReturns an iterator over all JSON files under the <code>root</code> dir.\nNormalize a path, removing things like <code>.</code> and <code>..</code>.\nWrapper for <code>std::fs::File::open</code>\nWrapper for <code>std::fs::read</code>.\nReads the JSON file and deserialize it into the provided …\nWrapper for <code>std::fs::read_link</code>.\nWrapper for <code>std::fs::read_to_string</code>.\nWrapper for <code>std::fs::remove_dir</code>\nWrapper for <code>std::fs::remove_dir_all</code>\nWrapper for <code>std::fs::remove_file</code>.\nWrapper for <code>std::fs::write</code>\nWrites the object as a JSON object.\nA <code>globset::Glob</code> that creates its <code>globset::GlobMatcher</code> when …\nReturns the <code>Glob</code> string used to compile this matcher.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nExpand globs with a root path.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns the <code>globset::Glob</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nTests whether the given path matches this pattern or not.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nThe compiled glob\nCreates a new <code>GlobMatcher</code> from a <code>globset::Glob</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nHelper type to construct a <code>RetryProvider</code>\nHelper type alias for a retry provider\nHelper type alias for a retry provider with a signer\nSets aggressive <code>max_retry</code> and <code>initial_backoff</code> values\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nConstructs the <code>RetryProvider</code> taking all configs into …\nConstructs the <code>RetryProvider</code> with a signer\nSets the chain of the node the provider will connect to\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nSets the number of assumed available compute units per …\navailable CUPS\nSets the number of assumed available compute units per …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nConstructs a provider with a 100 millisecond interval poll …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nSets http headers\nThe starting backoff delay to use after the first failed …\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nSets the JWT secret\nJWT Secret\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nSets the provider to be local.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nHow often to retry a failed request\nThe starting backoff delay to use after the first failed …\nHow often to retry a failed request. If <code>None</code>, defaults to …\nCreates a new builder instance\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nAn utility trait for retrying requests based on the error …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nRuntime transport that connects on first request, which …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nEnables a request timeout.\nHow often to retry a failed request due to connection …\nAlloy-related tower middleware for retrying rate-limited …\nConstructs a provider with a 100 millisecond interval poll …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nImplements RetryPolicy that will retry requests that …\nRetryPolicy defines logic for which TransportError …\nEnables the styling <code>Attribute</code> <code>value</code>.\nProviders may include the <code>backoff</code> in the error response …\nProvides a backoff hint if the error response contains it\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nWhether to retry the request based on the given <code>error</code>\nAnalyzes the ErrorPayload and decides if the request …\nAnalyzes the TransportErrorKind and decides if the request …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nInvalid HTTP header\nInvalid file path\nInvalid URL scheme\nHTTP transport\nInvalid construction of Http provider\nAn enum representing the different transports that can be …\nInvalid JWT\nIPC transport\nFailed to lock the transport\nA runtime transport is a custom alloy_transport::Transport …\nA builder for RuntimeTransport.\nError type for the runtime transport.\nInternal transport error\nWebSocket transport\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nConvert this transport into a boxed trait object.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nBuilds the RuntimeTransport and returns it in a …\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nConnects the underlying transport, depending on the URL …\nConnects to an HTTP alloy_transport_http::Http transport.\nConnects to an IPC transport.\nConnects to a WS transport.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nThe headers to use for requests.\nThe inner actual transport used.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nThe JWT to use for requests.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nCreate a new builder with the given URL.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nSends a request using the underlying transport. If this is …\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nThe timeout for requests.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nThe URL to connect to.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nSet the URL for the transport.\nSet the JWT for the transport.\nSet the timeout for the transport.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nAn Alloy Tower Layer that is responsible for retrying …\nAn Alloy Tower Service that is responsible for retrying …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nCalculates an offset in seconds by taking into account the …\nThe number of compute units per second for this provider\nThe number of compute units per second for this service\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nThe initial backoff in milliseconds\nThe initial backoff in milliseconds\nThe inner service\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nThe maximum number of retries for rate limit errors\nThe maximum number of retries for rate limit errors\nThe maximum number of retries for timeout errors\nThe maximum number of retries for timeout errors\nCreates a new [RetryWithPolicyLayer] with the given …\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nThe retry policy\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nThe number of requests currently enqueued\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nA type that keeps track of attempts.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nCreates a new <code>Retry</code> instance.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nRuns the given closure in a loop, retrying if it fails up …\nRuns the given async closure in a loop, retrying if it …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nHow many request can time out before we decide this is a …\nThe standard request timeout for API requests\nA client that can request API data from …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nFetches all possible signatures and attempts to abi decode …\nFetches all possible signatures and attempts to abi decode …\nFetches an event signature given the 32 byte topic using …\nFetches an event signature given the 32 byte topic using …\nFetches a function signature given the selector …\nFetches a function signature given the selector using …\nDecodes the given function or event selector using …\nDecodes the given function or event selector using …\nDecodes the given function or event selectors using …\nDecodes the given function or event selectors using …\nPrint info about the functions which were uploaded or …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nuploads selectors to https://api.openchain.xyz using the …\nuploads selectors to https://api.openchain.xyz using the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns whether the connection was marked as spurious\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nMax allowed request that can time out\nCreates a new client with default settings\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.")