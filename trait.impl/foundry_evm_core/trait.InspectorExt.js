(function() {var implementors = {
"anvil":[["impl&lt;DB: Database&gt; <a class=\"trait\" href=\"foundry_evm_core/trait.InspectorExt.html\" title=\"trait foundry_evm_core::InspectorExt\">InspectorExt</a>&lt;DB&gt; for <a class=\"struct\" href=\"anvil/eth/backend/mem/inspector/struct.Inspector.html\" title=\"struct anvil::eth::backend::mem::inspector::Inspector\">Inspector</a>"]],
"cast":[],
"forge":[],
"foundry_cheatcodes":[["impl&lt;DB: DatabaseExt&gt; InspectorExt&lt;DB&gt; for <a class=\"struct\" href=\"foundry_cheatcodes/inspector/struct.Cheatcodes.html\" title=\"struct foundry_cheatcodes::inspector::Cheatcodes\">Cheatcodes</a>"]],
"foundry_evm":[["impl&lt;DB: <a class=\"trait\" href=\"foundry_evm/backend/trait.DatabaseExt.html\" title=\"trait foundry_evm::backend::DatabaseExt\">DatabaseExt</a> + DatabaseCommit&gt; <a class=\"trait\" href=\"foundry_evm/trait.InspectorExt.html\" title=\"trait foundry_evm::InspectorExt\">InspectorExt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>&gt; for <a class=\"struct\" href=\"foundry_evm/inspectors/stack/struct.InspectorStack.html\" title=\"struct foundry_evm::inspectors::stack::InspectorStack\">InspectorStack</a>"]],
"foundry_evm_core":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()